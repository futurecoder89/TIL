컴포넌트 스캔과 의존관계 자동 주입

  *의의
    -등록해야할 빈의 숫자가 많아지면 일일히 등록하기 번거롭고, 누락의 문제도 발생한다.
    -스프링은 설정 정보가 없어도 자동으로 스프링 빈을 등록하는 컴포넌트 스캔이라는 기능을 제공한다.
    -의존관계도 자동으로 주입하는 @Autowired 라는 기능도 제공한다

  *하는법
    -@Configuration
     @ComponentScan(
        excludeFilters = @ComponentScan.Filter(type = FilterType.ANNOTATION, classes = Configuration.class)
        //@Configuration 으로 등록된(AppConfig)는 자동스캔의 대상에서 exclude 시킨다//
      )
      public class AutoAppConfig {
      }
    위의 자바클래스 생성후에 원하는 클래스에 @Component를 입력하면 된다
    기존의 AppConfig에서는 의존관계를 생성자 주입으로 명시를 할수있었다.
    
    @Autowired라는 기능을 "생성자"에 붙혀줘서 자동의존관계를 주입한다. MemberServiceImpl클래스를 참고하자

  *탐색할 패키지의 시작 위치 지정
    -모든 자바 클래스를 다 컴포넌트 스캔하면 시간이 오래 걸린다. 그래서 꼭 필요한 위치부터 탐색하도록 시작 위치를 지
정할 수 있다.
    -권장 방법은 패키지 위치를 지정하지 않고, 설정 정보 클래스의 위치를 프로젝트 최상단에 두는 것
이다. 최근 스프링 부트도 이 방법을 기본으로 제공한다.
    -basePackages : 탐색할 패키지의 시작 위치를 지정한다. 이 패키지를 포함해서 하위 패키지를 모두 탐색한다.
    -basePackageClasses : 지정한 클래스의 패키지를 탐색 시작 위치로 지정한다.
만약 지정하지 않으면 @ComponentScan 이 붙은 설정 정보 클래스의 패키지가 시작 위치가 된다.
  *컴포넌트 스캔 기본 대상
    -컴포넌트 스캔은 @Component 뿐만 아니라 다음과 내용도 추가로 대상에 포함한다.
    -@Component : 컴포넌트 스캔에서 사용
    -@Controller : 스프링 MVC 컨트롤러에서 사용
    -@Service : 스프링 비즈니스 로직에서 사용
    -@Repository : 스프링 데이터 접근 계층에서 사용
    -@Configuration : 스프링 설정 정보에서 사용
